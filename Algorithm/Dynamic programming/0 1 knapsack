#include<bits/stdc++.h>
using namespace std;
int val[1005],weight[1005];
int dp[1005][1005];
int knapsack(int item,int mxweight)
{
  if (item < 0 || mxweight <= 0)
    return 0;
  if(dp[item][mxweight]!=-1)
  {
    return dp[item][mxweight];
  }
  if(weight[item]<=mxweight)
  {
    //2 ta option 
    //1.bag e rakhbo 2.rakhbo na 
    int op1=knapsack(item-1,mxweight-weight[item])+val[item];
    int op2=knapsack(item-1,mxweight);
    dp[item][mxweight]= max(op1, op2);
    return dp[item][mxweight];
  }
  else
  {
    //1 ta e option
    //bag e rakhte parbo na
    dp[item][mxweight]= knapsack(item - 1, mxweight);
    return dp[item][mxweight];
  }
}
int main()
{
  memset(dp,-1,sizeof(dp));
    int n,mxweight;
    cin>>n;
    for(int i=0;i<n;i++)
      cin>>val[i];
    for (int i = 0; i < n; i++)
      cin >> weight[i];
    cin>>mxweight;
    cout<<knapsack(n-1,mxweight)<<endl;
    return 0;
}
