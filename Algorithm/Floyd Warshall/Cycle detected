#include<bits/stdc++.h>
using namespace std;
int n, e;
int adjmatrix[1005][1005];
void floyd_warshall()
{
    for (int k = 0; k < n; k++)
    {
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n; j++)
            {
               if(adjmatrix[i][k]!=INT_MAX && adjmatrix[k][j]!=INT_MAX && adjmatrix[i][k]+adjmatrix[k][j]<adjmatrix[i][j])
                 adjmatrix[i][j]=adjmatrix[i][k]+adjmatrix[k][j];
            }
            
        }
        
    }
    bool cycle=false;
    for(int i=0;i<n;i++)
    {
        if(adjmatrix[i][i]<0)
            cycle=true;
    }
    if(cycle)
        cout<<"Cycle Detected";
    else
       {
           for (int i = 0; i < n; i++)
           {
               for (int j = 0; j < n; j++)
               {
                   if (adjmatrix[i][j] == INT_MAX)
                       cout << "I ";
                   else
                       cout << adjmatrix[i][j] << " ";
               }
               cout << endl;
           }
       } 

    
}
int main()
{
    cin>>n>>e;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (i == j)
                adjmatrix[i][j] = 0;
            else
                adjmatrix[i][j] = INT_MAX;
        }
    }
    while(e--)
    {
        int a ,b,c;
        cin>>a>>b>>c;
        adjmatrix[a][b]=min(adjmatrix[a][b],c);
    }

    floyd_warshall();

    
    return 0;
}
