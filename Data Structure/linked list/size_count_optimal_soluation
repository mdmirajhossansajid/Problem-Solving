#include<bits/stdc++.h>
using namespace std;
 class Node
{
public:
  int val;
  Node *next;
  Node(int val)
  {
    this->val = val;
    this->next = NULL;
  }
};
int sz=0;
void insert_at_head(Node* &head,Node* &tail,int val)
{   Node* newnode=new Node(val);
    sz++;
    if(head==NULL)
    {
        head=newnode;
        tail=newnode;
        return;
    }
    newnode->next=head;
    head=newnode;
    

}
void insert_at_tail(Node* &head,Node* &tail,int val)
{   Node* newnode=new Node(val);
    sz++;
    if(head==NULL)
    {
        head=newnode;
        tail=newnode;
        return;
    }
    tail->next=newnode;
    tail=newnode;

}
void insert_at_any_position(Node* &head,int idx,int val)
{   Node* newnode=new Node(val);
    sz++;
    Node* temp=head;
    for(int i=0;i<idx-1;i++)
    {
        temp=temp->next;
    }
    newnode->next=temp->next;
        temp->next=newnode;


}
void printing(Node* &head)
{   Node* temp=head;
    while(temp!=NULL)
    {   
        cout<<temp->val<<" ";
        temp=temp->next;
    }

}

int size_node(Node* &head)
{   //Node* temp=head;
//     int sizee=0;
//     while(temp!=NULL)
//     {   
//         sizee++;
//         temp=temp->next;
//     }
    //return sizee;
    return sz;

}
int main()
{
    Node* head=NULL;
    Node* tail=NULL;
    while(true)
    {
        int x;
        cin>>x;
        if(x==-1)
        {
            break;
        }
       insert_at_tail(head,tail,x);
    }
    printing(head);
    cout<<endl;
    cout<<size_node(head);
    
    
    return 0;
}
